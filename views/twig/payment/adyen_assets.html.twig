<script src="https://checkoutshopper-{{ oViewConf.getAdyenOperationMode() }}.adyen.com/checkoutshopper/sdk/{{ oViewConf.getAdyenSDKVersion() }}/adyen.js"
        integrity="{{ oViewConf.getAdyenIntegrityJS() }}"
        crossorigin="anonymous"></script>
<link rel="stylesheet"
      href="https://checkoutshopper-{{ oViewConf.getAdyenOperationMode() }}.adyen.com/checkoutshopper/sdk/{{ oViewConf.getAdyenSDKVersion() }}/adyen.css"
      integrity="{{ oViewConf.getAdyenIntegrityCSS() }}"
      crossorigin="anonymous">
{% if payment.oxpayments__oxid.value == constant('\\OxidSolutionCatalysts\\Adyen\\Core\\Module::PAYMENT_GOOGLE_PAY_ID') %}
    <script src="https://pay.google.com/gp/p/js/pay.js"></script>
{% endif %}
{% set sToken = oViewConf.getSessionChallengeToken() %}
{% set sSelfLink = oViewConf.getSslSelfLink()|replace({"&amp;": "&"}) %}
{% set adyenCreditCard = oViewConf.getAdyenPaymentCreditCardId() %}
{% set adyenPayPal = oViewConf.getAdyenPaymentPayPalId() %}
{% set adyenGooglePay = oViewConf.getAdyenPaymentGooglePayId() %}
{% if phpStorm %}<script>{% endif %}
    {% capture assign = "adyenJS" %}
        {% set isLog = oViewConf.isAdyenLoggingActive() %}
        {% set isPaymentPage = false %}
        {% set isOrderPage = false %}
        {% set templateCheckoutCreateId = oViewConf.getTemplateCheckoutCreateId(payment) %}
        {% set templatePayButtonContainerId = oViewConf.getTemplatePayButtonContainerId(payment) %}
        let submitForm;
        {% if oViewConf.getTopActiveClassName() == 'payment' %}
            {% set isPaymentPage = true %}
            submitForm = document.getElementById('payment');
            {# getting checkout next step button with fallback for apex theme #}
            {# ToDo: create a better way to access 'next step' element #}
            const nextStepEl = document.getElementsByClassName('btn-highlight')[0];
            {# reset the disabled-status of paymentNextStepBottom if payment is changed #}
            document.getElementsByName('paymentid').forEach(function (e) {
                e.addEventListener('change', function () {
                    nextStepEl.disabled = false;
                    nextStepEl.dataset.adyensubmit = '';
                });
            });
        {% elseif oViewConf.getTopActiveClassName() == 'order' %}
            {% set isOrderPage = true %}
            {% set paymentID = payment.getId() %}
            submitForm = document.getElementById('orderConfirmAgbBottom');
        {% endif %}
        const adyenPspReferenceEl = document.getElementById('{{ oViewConf.getAdyenHtmlParamPspReferenceName() }}');
        const adyenResultCodeEl = document.getElementById('{{ oViewConf.getAdyenHtmlParamResultCodeName() }}');
        const adyenAmountCurrencyEl = document.getElementById('{{ oViewConf.getAdyenHtmlParamAmountCurrencyName() }}');
        const adyenAmountValueEl = document.getElementById('{{ oViewConf.getAdyenHtmlParamAmountValueName() }}');

        const adyenAsync = async function () {
            {{ oViewConf.getTemplateConfiguration(oView, payment)|raw }}

            const checkout = await AdyenCheckout(configuration);
            // Access the available payment methods for the session.
            {% if isLog %}
                console.log(checkout.paymentMethodsResponse);
            {% endif %}
            {% if isPaymentPage and oView.isAvailablePayment(adyenCreditCard) %}
                const cardComponent = checkout.create('card').mount('#{{ adyenCreditCard }}-container');
            {% elseif isOrderPage %}
                {% if oViewConf.isApplePay(oView, payment) %}
                    const applePayComponent = checkout.create('{{ templateCheckoutCreateId }}', configuration);
                        applePayComponent.isAvailable()
                            .then(() => {
                                {% if isLog %}
                                    console.log('mount checkout component')
                                {% endif %}
                                applePayComponent.mount('#{{ templatePayButtonContainerId }}');
                            })
                            .catch(e => {
                                {% if isLog %}
                                    console.error('Apple Pay not available')
                                    console.error(e)
                                {% endif %}
                            });
                    {% else %}
                        checkout.create('{{ templateCheckoutCreateId }}', configuration).mount('#{{ templatePayButtonContainerId }}');
                {% endif %}
            {% endif %}

            const makePayment = (paymentRequest = {}) => {
                return httpPost('payments', paymentRequest)
                    .then(response => {
                        if (response.error) throw new Error('Payment initiation failed');
                        return response;
                    })
                    .catch(error => {
                        throw Error(error);
                    });
            };

            const setPaymentIdEl = (component, nextStepElDisabled) => {
                const paymentIdEl = document.getElementById(component._node.attributes.getNamedItem('data-paymentid').value);
                paymentIdEl.checked = true;
                nextStepEl.disabled = nextStepElDisabled;
                nextStepEl.dataset.adyensubmit = '';
                return paymentIdEl;
            };

            const makeDetailsCall = data =>
                httpPost('details', data)
                    .then(response => {
                        if (response.error || response.errorCode) throw new Error('Details call failed');
                        return response;
                    })
                    .catch(error => {
                        throw Error(error);
                    });

            const httpPost = (endpoint, data) =>
                fetch('{{ sSelfLink|raw }}cl=adyenjscontroller&fnc=' + endpoint + '&stoken={{ sToken }}{% if oViewConf.isAdyenSandboxMode() %}&XDEBUG_SESSION_START=1{% endif %}', {
                    method: 'POST',
                    headers: {
                        Accept: 'application/json, text/plain, */*',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                }).then(response => response.json());

            const setPspReference = (response) => {
                var result = false;
                if (response.pspReference && response.resultCode === 'Authorised') {

                    adyenPspReferenceEl.value = response.pspReference;
                    adyenResultCodeEl.value = response.resultCode;
                    adyenAmountCurrencyEl.value = response.amount.currency;
                    adyenAmountValueEl.value = response.amount.value;
                    result = true;
                }
                else if (response.resultCode !== 'Authorised') {
                    window.location.replace('{{ sSelfLink|raw }}cl=payment&payerror=2&stoken={{ sToken }}');
                }
                if (result === true) {

                    if (typeof submitForm !== 'undefined') {
                        submitForm.submit();
                    }
                }
                return result;
            }

            {% if isPaymentPage %}
                nextStepEl.addEventListener("click", function(e) {
                    if (this.dataset.adyensubmit !== '') {
                        e.preventDefault();
                        this.disabled = true;
                        if (this.dataset.adyensubmit === '{{ adyenCreditCard }}') {

                            cardComponent.paymentIdViewEl = document.getElementById('payment_{{ adyenCreditCard }}').parentElement;
                            cardComponent.submit();
                        }
                    }
                }, false);
            {% endif %}
        }
        // Call adyenAsync
        adyenAsync();

    {% endcapture %}
    {% if phpStorm %}</script>{% endif %}
{{ script({ add: adyenJS, dynamic: __oxid_include_dynamic }) }}